all:
  children:
    dbservers:
      hosts:
        pod.domain.fr:
      vars:
        postgresql_restarted_state: "restarted"
        postgresql_service_state: started
        postgresql_service_enabled: true
        postgresql_global_config_options:
          - option: listen_addresses
            value: '*'
        postgresql_hba_entries:
          - { type: local, database: all, user: postgres, auth_method: peer }
          - { type: local, database: all, user: all, auth_method: md5 }
          - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
          - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
        postgresql_databases:
          - name: pod
        postgresql_users:
          - name: pod
            db: pod
            password: pass
            
    
    elasticsearch:
      hosts:
        pod.domain.fr:
      vars:
        elasticsearch_version: '6.x'
        elasticsearch_service_state: started
        elasticsearch_service_enabled: true
        elasticsearch_network_host: localhost
        elasticsearch_http_port: 9200
        elasticsearch_cluster_name: pod-application
        elasticsearch_node_name: pod-1
        elasticsearch_unicast_hosts: ["127.0.0.1"]
   
    rabbitmq:
      hosts:
        pod.domain.fr: 
      vars:
        rabbitmq_daemon: rabbitmq-server
        rabbitmq_state: started
        rabbitmq_enabled: true
        rabbitmq_user: pod
        rabbitmq_password: pass
        rabbitmq_vhost: rabbitpod
    
    webservers:
      hosts:
        pod.domain.fr: 
   
    encodeservers:
      hosts:
        pod.domain.fr: 

  vars:
    python_version: python3.6
    venv_path: /data/.virtualenvs
    venv: django_pod
    user: pod
    group: pod
    django_path: /data/django/podv2
    logs: /var/log/pod
    pip3: /usr/bin/pip3
    depot: https://github.com/esupportail/podv2.git
    requirements: /data/django/podv2/requirements.txt
    django_db_backends: django.db.backends.postgresql_psycopg2
    db_name: pod
    db_user: pod
    db_pwd: pass
    db_port: 5432
    db_host: localhost
    smtp_host: mailhost
    default_email: noreply@pod.domain.fr
    elastic_host: pod.domain.fr
    elastic_ip: '*.*.*.*' 
    allowed_long: 'pod.domain.fr'
    allowed_short: 'pod.domain.fr'
    admins: "('prenom nom', 'prenom.nom@.fr')"
    pod_file: True
    tz: Europe/Paris
    rabbit_host: '*.*.*.*'
    rabbit_user: pod
    rabbit_pwd: pod
    rabbit_queue: rabbitpod
    use_cas: True
    cas_gateway: True
    populate: LDAP
    cas_url: http://cas.domain.fr/cas/
    ldap_serveur: ldap.domain.fr
    ldap_port: 636
    ldap_ssl: True
    affiliation: ( ('student', _('student')), ('faculty', _('faculty')), ('staff', _('staff')), ('employee', _('employee')), ('member', _('member')), ('affiliate', _('affiliate')), ('alum', _('alum')), ('library-walk-in', _('library-walk-in')), ('researcher', _('researcher')), ('retired', _('retired')), ('emeritus', _('emeritus')), ('teacher', _('teacher')), ('registered-reader', _('registered-reader')) )
    mapping: { "uid": "uid", "mail": "mail", "last_name": "sn", "first_name": "givenname", "affiliation": "eduPersonAffiliation" }
    bind_dn: 'cn=****'
    bind_pwd: '**********'
    base_dn: 'ou=****' 
    ldap_user_search: 'user'



          
    

    

     
    

          
