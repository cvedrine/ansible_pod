- name: install python & co
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - python3
    - python3-pip
    - python3-dev
    - python-setuptools
    - git
    - curl
  become: True

- file:
    path: "{{ venv_path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0755
  become: True

- file:
    path: "{{ django_path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0755
  become: True

- file:
    path: "{{ logs }}"
    state: directory
    owner: "{{ user }}"
    group: root
    mode: 0755
  become: True

- file:
    src: "{{ django_path }}"
    dest: "/home/{{ user }}/django"
    state: link
    owner: "{{ user }}"
    group: "{{ group }}"
  become: True

- name: Custom bashrc
  blockinfile:
    path:  "/home/{{ user }}/.bashrc"
    content: |
      export WORKON_HOME="{{ venv_path }}"
      export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
      source /usr/local/bin/virtualenvwrapper.sh

- name: Source bashrc
  shell: . "/home/{{ user }}/.bashrc"

- name: Install virtualenvwrapper
  become: yes
  become_method: sudo
  pip:
    executable: "{{ pip3 }}" 
    name: virtualenvwrapper
    state: present

- name: Make virtualenv
  shell: ". /usr/local/bin/virtualenvwrapper.sh && mkvirtualenv --system-site-packages --python=/usr/bin/python3 {{ venv }}"
  args:
    executable: /bin/bash
    creates: "{{ venv_path }}/{{ venv }}"
  environment:
    WORKON_HOME: "{{venv_path}}"
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
  register: mkvirtualenv
  failed_when: 'mkvirtualenv.changed and "New python executable" not in mkvirtualenv.stdout'

- git:
    clone: yes
    repo: "{{ depot }}"
    dest: "{{ django_path }}"

- pip:
    requirements: "{{ requirements }}"
    virtualenv: "{{ venv_path }}/{{ venv }}"
  

- pip:
    name: psycopg2-binary
    virtualenv: "{{ venv_path }}/{{ venv }}"
  
